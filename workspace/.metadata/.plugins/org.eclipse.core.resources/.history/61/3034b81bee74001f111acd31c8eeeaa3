package com.yemili.org.student.controller;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.yemili.org.student.entity.Student;
import com.yemili.org.student.service.StudentService;
@RestController
@RequestMapping("/students")
public class StudentController {
	
	@Autowired
    private StudentService studentservice;	
 private static final Logger logger = LoggerFactory.getLogger(StudentController.class);
  public StudentController(StudentService studentservice) {
			 this.studentservice= studentservice; }
		 
  @GetMapping("/show")
    public List<Student> getStudent(){
    	return studentservice.getAllStudents();
    	}
	    
	    
	    @GetMapping("/{id}")
	    public Student getStudentById(@PathVariable Integer id) {
	        return studentservice.getStudentByIds(id).orElse(null); // Or throw an exception
	    }
			  
		  
		/*
		 * public boolean getstudentage(Integer age) { if(student.getAge()>=30) return
		 * false; else studentlist.add(student); return true; }
		 */
		 
	    @PostMapping("/addstudents")
	    public Student addstudent(@RequestBody Student student)
	    {
	    	//logger.info("Received student: {}", student);
	    	return studentservice.addStudent(student);
	    		
	    }
		/*
		 * @PostMapping public ResponseEntity<String> addStudent(@RequestBody Student
		 * student) {
		 * 
		 * studentlist.add(student); return new
		 * ResponseEntity<>("Student added successfully", HttpStatus.CREATED); }
		 */
	    
	    @DeleteMapping("/{id}")
	    public ResponseEntity<Void> deleteStudent(@PathVariable("id") Integer id) {
	        boolean isDeleted = studentservice.deleteStudents(id);
	        if (isDeleted) {
	            return new ResponseEntity<>(HttpStatus.NO_CONTENT);
	        }
	        return new ResponseEntity<>(HttpStatus.NOT_FOUND);
	    }
	

}
