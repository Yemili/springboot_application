package com.yemili.org.student.service;
import org.springframework.beans.factory.annotation.Autowired;
import java.util.*;
import org.springframework.stereotype.Service;
import com.yemili.org.student.model.Student;
import com.yemili.org.student.repository.StudentRepository;
import java.lang.String;
@Service
public class StudentService {
	
	public List <Student> studentlist=new ArrayList<>();
	
	@Autowired
	private StudentRepository studentRepository;

	private Integer nextId = 1;
	public StudentService()
	 {
			/*
			 * studentlist.add(new Student(1, "John Doe", "")); studentlist.add(new
			 * Student(2, "Jane Smith", "")); studentlist.add(new Student(3, "yemili", ""));
			 * studentlist.add(new Student(4, "yamuna", "")); studentlist.add( new
			 * Student(6,"hemabushan", ""))
			 */;
	 }
	public List<Student> getAllStudents() {
        return studentRepository.findAll();
    }
	public  Optional<Student> getStudentByIds(int id) {
		 return studentlist.stream().filter(student -> student.getId().equals(id)).findFirst();
	 }
	public Student addStudent(Student student) {
		return studentRepository.save(student);
		/*
		 * student.setId(nextId++); Integer id=student.getId(); String
		 * name=student.getName(); //Integer age=student.getAge(); boolean idexists
		 * =studentlist.stream().anyMatch(s -> s.getId()==(student.getId())); boolean
		 * agecheck=student.getAge()>=30; if (idexists) {
		 * System.out.println("Student with ID " + id + " already exists.");
		 * 
		 * } if (agecheck) {
		 * System.out.println("Student age should be <30 will be added"); }
		 * studentlist.add(student); return student;
		 */
    }
	
	
	public void deleteStudentById(Long id) {
        Student student = studentRepository.deleteById(id);
        if (student != null) {
            studentRepository.delete(student);
        } else {
            throw new RuntimeException("Student not found with name: " + id);
        }
        public void updateStudentName(Long id, String newName) {
            Optional<Student> studentOpt = studentRepository.findById(id);
            if (studentOpt.isPresent()) {
                Student student = studentOpt.get();
                student.setName(newName);
                studentRepository.save(student);
            } else {
                throw new RuntimeException("Student not found with id: " + id);
            }
        
	 
	 
}
}


	